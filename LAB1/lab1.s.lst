68K GAS  ./lab1.s 			page 1


   1               	main:
   2 0000 2E7C 0000 	                move.l #$7000,a7        ; Set Stackpointer to $7000
   2      7000 
   3 0006 4EBA 0062 	                jsr setuppia
   4 000a 4EBA 018C 	                jsr setupstr
   5 000e 4EBA 016E 	                jsr setupcode
   6               	
   7               	loop:
   8 0012 4EBA 00AC 	                jsr getkey
   9 0016 60FA      	                bra loop
  10               	
  11               	alarm_on:
  12 0018 4EBA 009C 	                jsr activate_alarm
  13               	alarm_on_state:
  14 001c 4EBA 00A2 	                jsr getkey
  15 0020 0C04 000F 	                cmp.b #$f,d4
  16 0024 6702      	                beq submit
  17 0026 60F4      	                bra alarm_on_state
  18               	submit:
  19 0028 4EBA 0114 	                jsr checkcode
  20 002c 0C04 0001 	                cmp.b #$1,d4
  21 0030 6710      	                beq alarm_off             ; Correct!
  22               	incorrect:
  23 0032 287C 0000 	                move.l #$4100,a4          ; In arguments to printstring
  23      4100 
  24 0038 1A3C 000E 	                move.b #$e,d5             ; string is at $4100 with length $e (14)
  25 003c 4EBA 005E 	                jsr printstring
  26               	
  27 0040 60DA      	                bra alarm_on_state
  28               	
  29               	alarm_off:
  30 0042 4EBA 0068 	                jsr deactivate_alarm
  31               	alarm_off_state:
  32 0046 4EBA 0078 	                jsr getkey
  33 004a 0C04 000A 	                cmp.b #$a,d4
  34 004e 66F6      	                bne.b alarm_off_state
  35 0050 60C6      	                bra alarm_on   
  36               	
  37               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  38               	; In argument: ASCII-coded charactarer at register d4
  39               	; Varning - Denna rutin gar inte att stega sig igenom med TRACE da den
  40               	; anvander serieporten pa ett satt som ar inkompatibelt med TRACE.
  41               	printchar:
  42 0052 1F05      	                move.b d5,-(a7)         ; Spara undan d5 pa stacken
  43               	waittx:
  44 0054 1A39 0001 	                move.b $10040,d5        ; Serieportens statusregister
  44      0040 
  45 005a 0205 0002 	                and.b #2,d5             ; Isolera bit 1 (Ready to transmit)
  46 005e 67F4      	                beq waittx              ; Vanta tills serieporten ar klar att sanda
  47 0060 13C4 0001 	                move.b d4,$10042        ; Skicka ut
  47      0042 
  48 0066 1A1F      	                move.b (a7)+,d5         ; Aterstall d5
  49 0068 4E75      	                rts                     ; Tips: Satt en breakpoint har om du har problem med trac
  50               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  51               	
  52               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  53               	setuppia:
68K GAS  ./lab1.s 			page 2


  54 006a 13FC 0000 	                move.b #00,$10084        ; Valj datariktningsregistret (DDRA)
  54      0001 0084 
  55 0072 13FC 0001 	                move.b #01,$10080        ; Satt pinne 0 pa PIAA som utgang
  55      0001 0080 
  56 007a 13FC 000D 	                move.b #13,$10084        ; Valj in/utgangsregistret
  56      0001 0084 
  57 0082 13FC 0000 	                move.b #00,$10086        ; Valj datariktningsregistret (DDRB)
  57      0001 0086 
  58 008a 13FC 0000 	                move.b #00,$10082        ; Satt alla pinnar som ingangar
  58      0001 0082 
  59 0092 13FC 000D 	                move.b #13,$10086        ; Valj in/utgangsregistret
  59      0001 0086 
  60 009a 4E75      	                rts
  61               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  62               	
  63               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  64               	; In argument: Pekare till strangen i a4
  65               	;              Langd pa strangen i d5
  66               	printstring:
  67 009c 181C      	                move.b (a4)+,d4
  68 009e 4EBA FFB2 	                jsr printchar
  69 00a2 0605 FFFF 	                add.b #-1,d5
  70 00a6 6702      	                beq done
  71 00a8 60F2      	                bra printstring
  72               	done:
  73 00aa 4E75      	                rts
  74               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  75               	
  76               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  77               	
  78               	;;;;;;;;;;;;;;;;;;;
  79               	; In argument:  None
  80               	; Out argument: None
  81               	;
  82               	; Function: Turns the LED connected to the PIAA on
  83               	deactivate_alarm:
  84 00ac 13FC 0000 	                move.b #00,$10080
  84      0001 0080 
  85 00b4 4E75      	                rts
  86               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  87               	
  88               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  89               	; In argument:  None
  90               	; Out argument: None
  91               	;
  92               	; Function: Turns the LED connected to the PIAA on
  93               	activate_alarm:
  94 00b6 13FC 0001 	                move.b #01,$10080
  94      0001 0080 
  95 00be 4E75      	                rts
  96               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  97               	
  98               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  99               	; In argument:  None
 100               	; Out argument: Pressed button is returned at memaddr d4
 101               	getkey:
 102               	; Forberedelseuppgift: Skriv denna subrutin!
68K GAS  ./lab1.s 			page 3


 103 00c0 183C 0000 	                move.b #$00,d4
 104               	
 105 00c4 1A39 0001 	                move.b $10080,d5       ; Read hexkeyboard
 105      0080 
 106 00ca 1C38 4020 	                move.b $4020,d6        ; Old input
 107               	
 108 00ce 11C6 4020 	                move.b d6,$4020        ; Save new input to $4022
 109 00d2 11C5 4022 	                move.b d5,$4022        ; Save old input to $4020
 110               	
 111 00d6 1A38 0010 	                move.b $10,d5
 112 00da CA38 0010 	                and.b  $10,d5          ; Get new strobe
 113 00de CC38 0010 	                and.b  $10,d6          ; Get old strobe
 114 00e2 E90D      	                lsl.b  #4,d5           ; Get strobe to bit 1
 115 00e4 E90E      	                lsl.b  #4,d6           ; Get strobe to bit 1
 116 00e6 1A38 0010 	                move.b $10,d5
 117               	
 118 00ea 0C06 0000 	                cmp.b  #$0,d6          ; Was strobe low?
 119 00ee 6610      	                bne strobe_high
 120               	strobe_low:
 121 00f0 0C05 0001 	                cmp.b  #$1,d5          ; Is strobe rising?
 122 00f4 660C      	                bne status_quo
 123 00f6 1838 4020 	                move.b $4020,d4        ; Fetch input
 124 00fa C838 000F 	                and.b  $0f,d4          ; Zero out the four MSB bits
 125 00fe 4E75      	                rts                    ; Return input to d4
 126               	strobe_high:
 127 0100 4E75      	                rts
 128               	status_quo:
 129 0102 4E75      	                rts
 130               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 131               	
 132               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 133               	; In argument:  Vald tangent i d4
 134               	; Out argument: None
 135               	;
 136               	; Function: Flyttar $4001-$4003 bakat en byte till
 137               	; $4000-$4002. Lagrar sedan innehallet i d4 pa adress $4003.
 138               	addkey:
 139 0104 1638 4001 	                move.b $4001,d3
 140 0108 11C3 4000 	                move.b d3,$4000
 141               	
 142 010c 1638 4002 	                move.b $4002,d3
 143 0110 11C3 4001 	                move.b d3,$4001
 144               	                
 145 0114 1638 4003 	                move.b $4003,d3
 146 0118 11C3 4002 	                move.b d3,$4002
 147               	                
 148 011c 1604      	                move.b d4,d3
 149 011e 11C3 4003 	                move.b d3,$4003
 150               	
 151 0122 4E75      	                rts
 152               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 153               	
 154               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 155               	; In argument:  None
 156               	; Out argument: None
 157               	;
 158               	; Function: Sets the memory at $4000-$4003 to $FF
68K GAS  ./lab1.s 			page 4


 159               	clearinput:
 160 0124 11FC 00FF 	                move.b #$ff,$4000
 160      4000 
 161 012a 11FC 00FF 	                move.b #$ff,$4001
 161      4001 
 162 0130 11FC 00FF 	                move.b #$ff,$4002
 162      4002 
 163 0136 11FC 00FF 	                move.b #$ff,$4003
 163      4003 
 164               	
 165               	                ; test correct code
 166               	                ; move.b #$01,$4000
 167               	                ; move.b #$03,$4001
 168               	                ; move.b #$03,$4002
 169               	                ; move.b #$07,$4003
 170 013c 4E75      	                rts
 171               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 172               	
 173               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 174               	; In argument:  None
 175               	; Out argument: Returnerar 1 i d4 om koden var korrekt, annars 0 i d4
 176               	checkcode:
 177               	; Function: Checks if the code is correct
 178 013e 74FF      	                move.l #$ffffffff,d2          ; Clear d2
 179 0140 76FF      	                move.l #$ffffffff,d3          ; Clear d3
 180               	                
 181 0142 1438 4000 	                move.b $4000,d2               ; Check if m[$4000] == m[$4010]
 182 0146 1638 4010 	                move.b $4010,d3
 183 014a B642      	                cmp d2,d3
 184 014c 662A      	                bne wrong_code
 185               	
 186 014e 1438 4001 	                move.b $4001,d2               ; Check if m[$4001] == m[$4011]
 187 0152 1638 4011 	                move.b $4011,d3
 188 0156 B642      	                cmp d2,d3
 189 0158 661E      	                bne wrong_code
 190               	
 191 015a 1438 4002 	                move.b $4002,d2               ; Check if m[$4002] == m[$4012]
 192 015e 1638 4012 	                move.b $4012,d3
 193 0162 B642      	                cmp d2,d3
 194 0164 6612      	                bne wrong_code
 195               	
 196 0166 1438 4003 	                move.b $4003,d2               ; Check if m[$4003] == m[$4013]
 197 016a 1638 4013 	                move.b $4013,d3
 198 016e B642      	                cmp d2,d3
 199 0170 6606      	                bne wrong_code
 200               	
 201               	right_code:
 202 0172 183C 0001 	                move.b #1,d4
 203 0176 4E75      	                rts
 204               	wrong_code:
 205 0178 183C 0000 	                move.b #0,d4
 206 017c 4E75      	                rts
 207               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 208               	
 209               	
 210               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 211               	; In argument:  None
68K GAS  ./lab1.s 			page 5


 212               	; Out argument: None
 213               	setupcode:
 214               	; Function hardkodar den korrekta koden i $4010-$4013
 215 017e 11FC 0001 	                move.b #$01,$4010
 215      4010 
 216 0184 11FC 0003 	                move.b #$03,$4011
 216      4011 
 217 018a 11FC 0003 	                move.b #$03,$4012
 217      4012 
 218 0190 11FC 0007 	                move.b #$07,$4013
 218      4013 
 219 0196 4E75      	                rts
 220               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 221               	
 222               	
 223               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 224               	; In argument:  None
 225               	; Out argument: Length of string in d5
 226               	setupstr:
 227               	; Function sets up the string "BAKGRUNDSPROGRAM\n" to the memory 
 228               	; adress $4100-$4110
 229 0198 227C 0000 	                move.l #$4100,a1        ; Where to put the string
 229      4100 
 230 019e 1A3C 000E 	                move.b #14,d5           ; Move 14 to d5 (length of string)
 231               	
 232 01a2 12FC 0046 	                move.b #'F',(a1)+       ; F
 233 01a6 12FC 0065 	                move.b #'e',(a1)+       ; e
 234 01aa 12FC 006C 	                move.b #'l',(a1)+       ; l
 235 01ae 12FC 0061 	                move.b #'a',(a1)+       ; a
 236               	
 237 01b2 12FC 006B 	                move.b #'k',(a1)+       ; k
 238 01b6 12FC 0074 	                move.b #'t',(a1)+       ; t
 239 01ba 12FC 0069 	                move.b #'i',(a1)+       ; i
 240 01be 12FC 0067 	                move.b #'g',(a1)+       ; g
 241               	                
 242 01c2 12FC 0020 	                move.b #' ',(a1)+       ;  
 243 01c6 12FC 006B 	                move.b #'k',(a1)+       ; k
 244 01ca 12FC 006F 	                move.b #'o',(a1)+       ; o
 245 01ce 12FC 0064 	                move.b #'d',(a1)+       ; d
 246               	
 247 01d2 12FC 0021 	                move.b #'!',(a1)+       ; !
 248 01d6 12FC 000A 	                move.b #$a,(a1)+        ; \n
 249               	
 250 01da 4E75      	                rts
 251               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 252               	
 253               	
 254               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 255               	; In argument:  None
 256               	; Out argument: None
 257               	pwm:
 258               	; Function: PWM function, uses d3 for duty cycle. Runs until d1 is zero.
 259 01dc 163C 0088 	                move.b #$88,d3
 260               	pwm_loop:
 261 01e0 143C 00FF 	                move.b #$ff,d2
 262               	
 263               	duty_loop:
68K GAS  ./lab1.s 			page 6


 264 01e4 B602      	                cmp.b d2,d3
 265               	
 266 01e6 6604      	                bne no_act
 267 01e8 4EBA FECC 	                jsr activate_alarm
 268               	no_act:
 269 01ec 0C01 0000 	                cmp.b #$00,d1
 270 01f0 670C      	                beq pwm_done
 271               	
 272 01f2 0602 FFFF 	                add.b #-1,d2
 273 01f6 66EC      	                bne duty_loop
 274               	
 275 01f8 4EBA FEB2 	                jsr deactivate_alarm
 276 01fc 60E2      	                bra pwm_loop
 277               	
 278               	pwm_done:
 279 01fe 4EBA FEAC 	                jsr deactivate_alarm
 280 0202 4E75      	                rts
 281               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
