68K GAS  ./lab1.s 			page 1


   1               	main:
   2 0000 2E7C 0000 	                move.l #$7000,a7        ; Set Stackpointer to $7000
   2      7000 
   3 0006 4EBA 0070 	                jsr setuppia
   4 000a 4EBA 015C 	                jsr setupstr
   5 000e 4EBA 013E 	                jsr setupcode
   6               	
   7 0012 287C 0000 	                move.l #$4100,a4          ; In arguments to printstring
   7      4100 
   8 0018 1A3C 000E 	                move.b #$e,d5             ; string is at $4100 with length $e (14)
   9 001c 4EBA 008C 	                jsr printstring
  10               	
  11 0020 1E3C 00FF 	                move.b #255,d7
  12 0024 4E4E      	                trap #14
  13               	alarm_on:
  14 0026 4EBA 009C 	                jsr activate_alarm
  15               	alarm_on_state:
  16 002a 4EBA 00A2 	                jsr getkey
  17 002e 0C04 000F 	                cmp.b #$f,d4
  18 0032 6702      	                beq submit
  19 0034 60F4      	                bra alarm_on_state
  20               	submit:
  21 0036 4EBA 00D6 	                jsr checkcode
  22 003a 0C04 0001 	                cmp.b #$1,d4
  23 003e 6710      	                beq alarm_off             ; Correct!
  24               	incorrect:
  25 0040 287C 0000 	                move.l #$4100,a4          ; In arguments to printstring
  25      4100 
  26 0046 1A3C 000E 	                move.b #$e,d5             ; string is at $4100 with length $e (14)
  27 004a 4EBA 005E 	                jsr printstring
  28               	
  29 004e 60DA      	                bra alarm_on_state
  30               	
  31               	alarm_off:
  32 0050 4EBA 0068 	                jsr deactivate_alarm
  33               	alarm_off_state:
  34 0054 4EBA 0078 	                jsr getkey
  35 0058 0C04 000A 	                cmp.b #$a,d4
  36 005c 66F6      	                bne.b alarm_off_state
  37 005e 60C6      	                bra alarm_on   
  38               	
  39               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  40               	; In argument: ASCII-coded charactarer at register d4
  41               	; Varning - Denna rutin gar inte att stega sig igenom med TRACE da den
  42               	; anvander serieporten pa ett satt som ar inkompatibelt med TRACE.
  43               	printchar:
  44 0060 1F05      	                move.b d5,-(a7)         ; Spara undan d5 pa stacken
  45               	waittx:
  46 0062 1A39 0001 	                move.b $10040,d5        ; Serieportens statusregister
  46      0040 
  47 0068 0205 0002 	                and.b #2,d5             ; Isolera bit 1 (Ready to transmit)
  48 006c 67F4      	                beq waittx              ; Vanta tills serieporten ar klar att sanda
  49 006e 13C4 0001 	                move.b d4,$10042        ; Skicka ut
  49      0042 
  50 0074 1A1F      	                move.b (a7)+,d5         ; Aterstall d5
  51 0076 4E75      	                rts                     ; Tips: Satt en breakpoint har om du har problem med trac
  52               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
68K GAS  ./lab1.s 			page 2


  53               	
  54               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  55               	setuppia:
  56 0078 13FC 0000 	                move.b #00,$10084        ; Valj datariktningsregistret (DDRA)
  56      0001 0084 
  57 0080 13FC 0001 	                move.b #01,$10080        ; Satt pinne 0 pa PIAA som utgang
  57      0001 0080 
  58 0088 13FC 000D 	                move.b #13,$10084        ; Valj in/utgangsregistret
  58      0001 0084 
  59 0090 13FC 0000 	                move.b #00,$10086        ; Valj datariktningsregistret (DDRB)
  59      0001 0086 
  60 0098 13FC 0000 	                move.b #00,$10082        ; Satt alla pinnar som ingangar
  60      0001 0082 
  61 00a0 13FC 000D 	                move.b #13,$10086        ; Valj in/utgangsregistret
  61      0001 0086 
  62 00a8 4E75      	                rts
  63               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  64               	
  65               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  66               	; In argument: Pekare till strangen i a4
  67               	;              Langd pa strangen i d5
  68               	printstring:
  69 00aa 181C      	                move.b (a4)+,d4
  70 00ac 4EBA FFB2 	                jsr printchar
  71 00b0 0605 FFFF 	                add.b #-1,d5
  72 00b4 6702      	                beq done
  73 00b6 60F2      	                bra printstring
  74               	done:
  75 00b8 4E75      	                rts
  76               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  77               	
  78               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  79               	
  80               	;;;;;;;;;;;;;;;;;;;
  81               	; In argument:  None
  82               	; Out argument: None
  83               	;
  84               	; Function: Turns the LED connected to the PIAA on
  85               	deactivate_alarm:
  86 00ba 33FC 0000 	                move #00,$10080
  86      0001 0080 
  87 00c2 4E75      	                rts
  88               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  89               	
  90               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  91               	; In argument:  None
  92               	; Out argument: None
  93               	;
  94               	; Function: Turns the LED connected to the PIAA on
  95               	activate_alarm:
  96 00c4 33FC 0001 	                move #01,$10080
  96      0001 0080 
  97 00cc 4E75      	                rts
  98               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  99               	
 100               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 101               	; In argument:  None
68K GAS  ./lab1.s 			page 3


 102               	; Out argument: Pressed button is returned at memaddr d4
 103               	getkey:
 104               	; Forberedelseuppgift: Skriv denna subrutin!
 105 00ce 383C 00FF 	                move #$ff,d4
 106               	                
 107 00d2 4E75      	                rts
 108               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 109               	
 110               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 111               	; In argument:  Vald tangent i d4
 112               	; Out argument: None
 113               	;
 114               	; Function: Flyttar $4001-$4003 bakat en byte till
 115               	; $4000-$4002. Lagrar sedan innehallet i d4 pa adress $4003.
 116               	addkey:
 117 00d4 1638 4001 	                move.b $4001,d3
 118 00d8 11C3 4000 	                move.b d3,$4000
 119               	
 120 00dc 1638 4002 	                move.b $4002,d3
 121 00e0 11C3 4001 	                move.b d3,$4001
 122               	                
 123 00e4 1638 4003 	                move.b $4003,d3
 124 00e8 11C3 4002 	                move.b d3,$4002
 125               	                
 126 00ec 1604      	                move.b d4,d3
 127 00ee 11C3 4003 	                move.b d3,$4003
 128               	
 129 00f2 4E75      	                rts
 130               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 131               	
 132               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 133               	; In argument:  None
 134               	; Out argument: None
 135               	;
 136               	; Function: Sets the memory at $4000-$4003 to $FF
 137               	clearinput:
 138 00f4 11FC 00FF 	                move.b #$ff,$4000
 138      4000 
 139 00fa 11FC 00FF 	                move.b #$ff,$4001
 139      4001 
 140 0100 11FC 00FF 	                move.b #$ff,$4002
 140      4002 
 141 0106 11FC 00FF 	                move.b #$ff,$4003
 141      4003 
 142               	
 143               	                ; test correct code
 144               	                ; move.b #$01,$4000
 145               	                ; move.b #$03,$4001
 146               	                ; move.b #$03,$4002
 147               	                ; move.b #$07,$4003
 148 010c 4E75      	                rts
 149               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 150               	
 151               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 152               	; In argument:  None
 153               	; Out argument: Returnerar 1 i d4 om koden var korrekt, annars 0 i d4
 154               	checkcode:
68K GAS  ./lab1.s 			page 4


 155               	; Function: Checks if the code is correct
 156 010e 74FF      	                move.l #$ffffffff,d2          ; Clear d2
 157 0110 76FF      	                move.l #$ffffffff,d3          ; Clear d3
 158               	                
 159 0112 1438 4000 	                move.b $4000,d2               ; Check if m[$4000] == m[$4010]
 160 0116 1638 4010 	                move.b $4010,d3
 161 011a B642      	                cmp d2,d3
 162 011c 662A      	                bne wrong_code
 163               	
 164 011e 1438 4001 	                move.b $4001,d2               ; Check if m[$4001] == m[$4011]
 165 0122 1638 4011 	                move.b $4011,d3
 166 0126 B642      	                cmp d2,d3
 167 0128 661E      	                bne wrong_code
 168               	
 169 012a 1438 4002 	                move.b $4002,d2               ; Check if m[$4002] == m[$4012]
 170 012e 1638 4012 	                move.b $4012,d3
 171 0132 B642      	                cmp d2,d3
 172 0134 6612      	                bne wrong_code
 173               	
 174 0136 1438 4003 	                move.b $4003,d2               ; Check if m[$4003] == m[$4013]
 175 013a 1638 4013 	                move.b $4013,d3
 176 013e B642      	                cmp d2,d3
 177 0140 6606      	                bne wrong_code
 178               	
 179               	right_code:
 180 0142 183C 0001 	                move.b #1,d4
 181 0146 4E75      	                rts
 182               	wrong_code:
 183 0148 183C 0000 	                move.b #0,d4
 184 014c 4E75      	                rts
 185               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 186               	
 187               	
 188               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 189               	; In argument:  None
 190               	; Out argument: None
 191               	setupcode:
 192               	; Function hardkodar den korrekta koden i $4010-$4013
 193 014e 11FC 0001 	                move.b #$01,$4010
 193      4010 
 194 0154 11FC 0003 	                move.b #$03,$4011
 194      4011 
 195 015a 11FC 0003 	                move.b #$03,$4012
 195      4012 
 196 0160 11FC 0007 	                move.b #$07,$4013
 196      4013 
 197 0166 4E75      	                rts
 198               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 199               	
 200               	
 201               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 202               	; In argument:  None
 203               	; Out argument: Length of string in d5
 204               	setupstr:
 205               	; Function sets up the string "BAKGRUNDSPROGRAM\n" to the memory 
 206               	; adress $4100-$4110
 207 0168 227C 0000 	                move.l #$4100,a1        ; Where to put the string
68K GAS  ./lab1.s 			page 5


 207      4100 
 208 016e 1A3C 000E 	                move.b #14,d5           ; Move 14 to d5 (length of string)
 209               	
 210 0172 12FC 0046 	                move.b #'F',(a1)+       ; F
 211 0176 12FC 0065 	                move.b #'e',(a1)+       ; e
 212 017a 12FC 006C 	                move.b #'l',(a1)+       ; l
 213 017e 12FC 0061 	                move.b #'a',(a1)+       ; a
 214               	
 215 0182 12FC 006B 	                move.b #'k',(a1)+       ; k
 216 0186 12FC 0074 	                move.b #'t',(a1)+       ; t
 217 018a 12FC 0069 	                move.b #'i',(a1)+       ; i
 218 018e 12FC 0067 	                move.b #'g',(a1)+       ; g
 219               	                
 220 0192 12FC 0020 	                move.b #' ',(a1)+       ;  
 221 0196 12FC 006B 	                move.b #'k',(a1)+       ; k
 222 019a 12FC 006F 	                move.b #'o',(a1)+       ; o
 223 019e 12FC 0064 	                move.b #'d',(a1)+       ; d
 224               	
 225 01a2 12FC 0021 	                move.b #'!',(a1)+       ; !
 226 01a6 12FC 000A 	                move.b #$a,(a1)+        ; \n
 227               	
 228 01aa 4E75      	                rts
 229               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 230               	
 231               	
 232               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 233               	; In argument:  None
 234               	; Out argument: None
 235               	pwm:
 236               	; Function: PWM function, uses d3 for duty cycle. Runs until d1 is zero.
 237 01ac 163C 0088 	                move.b #$88,d3
 238               	pwm_loop:
 239 01b0 143C 00FF 	                move.b #$ff,d2
 240               	
 241               	duty_loop:
 242 01b4 B602      	                cmp.b d2,d3
 243               	
 244 01b6 6604      	                bne no_act
 245 01b8 4EBA FF0A 	                jsr activate_alarm
 246               	no_act:
 247 01bc 0C01 0000 	                cmp.b #$00,d1
 248 01c0 670C      	                beq pwm_done
 249               	
 250 01c2 0602 FFFF 	                add.b #-1,d2
 251 01c6 66EC      	                bne duty_loop
 252               	
 253 01c8 4EBA FEF0 	                jsr deactivate_alarm
 254 01cc 60E2      	                bra pwm_loop
 255               	
 256               	pwm_done:
 257 01ce 4EBA FEEA 	                jsr deactivate_alarm
 258 01d2 4E75      	                rts
 259               	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
